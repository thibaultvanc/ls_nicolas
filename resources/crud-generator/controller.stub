<?php

namespace DummyNamespace;

use DummyRootNamespaceHttp\Requests;
use DummyRootNamespaceHttp\Controllers\Controller;

use DummyRootNamespace{{modelName}};
use Illuminate\Http\Request;
use Carbon\Carbon;
use Session;

class DummyClass extends Controller
{

    
    public function index()
    {
        ${{crudName}} = {{modelName}}::orderBy('updated_at', 'desc')->paginate(50);

        return view('{{viewPath}}{{crudName}}.index', compact('{{crudName}}'));
    }

   


    public function create()
    {
        $mode = 'create';
        return view('{{viewPath}}{{crudName}}.edit', compact('mode'));
    }

  


    public function store(Request $request)
    {
        {{validationRules}}
        {{modelName}}::create($request->all());

        Session::flash('flash_message', '{{modelName}} added!');

        return redirect('{{routeGroup}}{{crudName}}');
    }

 



    public function show($id)
    {
        ${{crudNameSingular}} = {{modelName}}::findOrFail($id);

        return view('{{viewPath}}{{crudName}}.show', compact('{{crudNameSingular}}'));
    }





    public function edit($id)
    {
        ${{crudNameSingular}} = {{modelName}}::findOrFail($id);
        $mode = 'edit';    

        return view('{{viewPath}}{{crudName}}.edit', compact('{{crudNameSingular}}', 'mode'));
    }




    public function update($id, Request $request)
    {
        {{validationRules}}
        ${{crudNameSingular}} = {{modelName}}::findOrFail($id);
        ${{crudNameSingular}}->update($request->all());

        Session::flash('flash_message', '{{modelName}} updated!');

        return redirect('{{routeGroup}}{{crudName}}');
    }

   


   
    public function destroy($id)
    {
        {{modelName}}::destroy($id);

        Session::flash('flash_message', '{{modelName}} deleted!');

        return redirect('{{routeGroup}}{{crudName}}');
    }

}
